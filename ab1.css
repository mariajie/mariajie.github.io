@import url('https://fonts.googleapis.com/css?family=Great+Vibes');
@import url('https://fonts.googleapis.com/css?family=Julius+Sans+One');

body {
	padding:0px;
    	background-image: url(http://cdn.eso.org/images/screen/eso0932a.jpg);
    	background-size: 100%;
	text-align:center;
}

#capcalera{
	background: black;
	height: 80px;
	
	width: 100%; 
	left: 0; 
	top: 0; 
    position: fixed;
}
/***background: linear-gradient(35deg, #CCFFFF, #FFCCCC);**
*/
    
.hu{
    position: absolute;
    top: 20%;
    left: 50%;
    transform: translate(-50%, -50%);
}

h2{
    position: absolute;
    font-family: 'Julius Sans One', sans-serif;
    font-size: 12pt;
    padding-left: 450px;
    padding-top: 20px;
    color: white;
    
}

p{
    position: absolute;
    font-family: 'Julius Sans One', sans-serif;
    font-size: 12pt;
    padding-left: 50px;
    padding-top: 10px;
    color: white;
    
}

p1{
    position: absolute;
    font-family: 'Julius Sans One', sans-serif;
    font-size: 12pt;
    padding-left: 40%;
    padding-top: 30px;
    color:white;
    
}



.ho{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

h1{
   color: white;
    font-size: 100pt;
    text-align: center;
    padding-top: 120px;
    font-family: 'Julius Sans One', sans-serif;
   
}


/*holiiiii :D*/
#header{
    margin: auto;
    float: right;
    font-size: 15px;
  }

ul, ol{
    list-style: none;
    text-decoration: none;
    color: black;
    float: right;
    padding: 0px;
    background: none;
}

.nav li a {
        background: NONE;
        display: block;
        text-decoration: none;
        color: BLACK;
        padding: 10px 15px;
        padding-right: 20px;
        padding-top: 15px;
        font-family:calibri;
    font-size: 15pt;
        font-family: 'Julius Sans One', sans-serif;
    color:white;
    
}

.nav >li{
	float: left;
    background: none;
	color:balck;
}

.nav li a:hover{
    background-color: #dcdcdc;
    
}
	
.nav li ul {
    display:none;
    position: absolute;
    min-width: 70px;
    
}

.nav li:hover >ul{
    display:block;
    
}   




















$colors: (
    background-image: url(http://cdn.eso.org/images/screen/eso0932a.jpg);
    text: #eee
);

$font: (
    family: sans-serif,
    size: 24px,
    letter-spacing: 0
);

$config: (
    animated: false,
    nb-letters: 110,
    animation-length: 2s,
    mask-letters: ("0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "f", "g", "h", "i", "k",)
);

// ----------------------------------

@function color($value) {
    @return map-get($colors, $value);
}

@function font($value) {
    @return map-get($font, $value);
}

@function config($value) {
    @return map-get($config, $value);
}

@function random-string($list) {
    $result: null;
    @for $i from 1 through length($list) {
        $random: random(length($list));
        $current: nth($list, $random);
        $list: remove-nth($list, $random);
        $result: $result#{$current};
    }
    @return $result;
}

@function remove-nth($list, $index) {
    $result: ();
    @for $i from 1 through length($list) {
        @if $i != $index {
            $result: append($result, nth($list, $i));
        }
    }
    @return $result;
}

@mixin respond-to($breakpoint) {
    @if type-of($breakpoint) == list {
        @media (min-width: nth($breakpoint, 1)) and (max-width: nth($breakpoint, 2)) {
            @content;
        }
    }
    @else {
        @media (max-width: $breakpoint) {
            @content;
        }
    }
}

// ----------------------------------

.wrapper {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 90%;
    font-size: 0;
    transform: translate(-50%);
}

.letter {
    width: font(size);
    display: inline-block;
    vertical-align: middle;
    position: relative;
    overflow: hidden;
    margin: 0 ceil(font(letter-spacing) / 2);
    font-family: font(family);
    font-size: font(size);
    font-weight: 600;
    line-height: font(size);
    text-transform: uppercase;
    color: color(text);
    @include respond-to(625px) {
        //font-size: 16px;
        //width: 18px;
    }
    &:before {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        word-break: break-all;
        background-color: color(background);
    }
}

// ----------------------------------

@for $i from 1 through config(nb-letters) {
    $length: length(config(mask-letters));
    $random: random($length);
    $steps: $random - 1;
    $offset: font(size) * $steps * -1;
    $delay: random(100) / 100;
      $duration: $steps * (config(animation-length) / $random);
    .letter:nth-child(#{$i}):before {
        content: quote(random-string(config(mask-letters)));
        margin-top: $offset;
        animation-name: letter#{$i};
        animation-duration: $duration - ($duration * $delay);
        animation-delay: $delay * 1s;
        animation-fill-mode: forwards;
    }
    @keyframes letter#{$i} {
        from {
            margin-top: $offset;
        }
        to {
            margin-top: font(size);
        }
    }

